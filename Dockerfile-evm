# Build - first phase
FROM golang:1.21-alpine as builder
RUN mkdir /build
WORKDIR /build
RUN apk update && apk add --no-cache build-base linux-headers git bash ca-certificates libstdc++
COPY . .
RUN make BUILD_TAGS=nosqlite,noboltdb,nosilkworm evm-dbg

# Runtime -  second phase.
FROM alpine:3.17
RUN mkdir /app
WORKDIR /app
RUN apk update && apk add --no-cache bash=5.2.15-r0 libstdc++
COPY --from=builder --chmod=700 /build/build/bin/ /app

HEALTHCHECK --interval=10s --timeout=5s CMD wget --no-verbose --tries=1 --spider localhost:3002/health

ENTRYPOINT [ "/bin/bash", "-l", "-c"]
CMD [ "./evm t8n --server.mode --server.port 3002" ]

# default
EXPOSE 3002